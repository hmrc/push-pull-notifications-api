# microservice specific routes

# Box
PUT       /box                                    uk.gov.hmrc.pushpullnotificationsapi.controllers.BoxController.createBox()

GET       /box                                    uk.gov.hmrc.pushpullnotificationsapi.controllers.BoxController.getBoxes(boxName: Option[String], clientId: Option[ClientId])

PUT       /box/:boxId/callback                    uk.gov.hmrc.pushpullnotificationsapi.controllers.BoxController.updateCallbackUrl(boxId: BoxId)

# Notifications
POST      /box/:boxId/notifications               uk.gov.hmrc.pushpullnotificationsapi.controllers.NotificationsController.saveNotification(boxId: BoxId)

GET       /box/:boxId/notifications               uk.gov.hmrc.pushpullnotificationsapi.controllers.NotificationsController.getNotificationsByBoxIdAndFilters(boxId: BoxId)

PUT       /box/:boxId/notifications/acknowledge   uk.gov.hmrc.pushpullnotificationsapi.controllers.NotificationsController.acknowledgeNotifications(boxId: BoxId)

# Wrapped Notifications
POST      /box/:boxId/wrapped-notifications       uk.gov.hmrc.pushpullnotificationsapi.controllers.WrappedNotificationsController.saveWrappedNotification(boxId: BoxId)

# Client

GET      /client/:clientId/secrets                uk.gov.hmrc.pushpullnotificationsapi.controllers.ClientController.getClientSecrets(clientId: ClientId)

# Client Managed Boxes
# PUT      /cmb/box/:boxId/callback                 uk.gov.hmrc.pushpullnotificationsapi.controllers.BoxController.updateClientManagedCallbackUrl(boxId: BoxId)
