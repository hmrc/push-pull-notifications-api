#%RAML 1.0
---
title: Push Pull Notifications
version: 1.0

protocols: [ HTTPS ]
baseUri: https://api.service.hmrc.gov.uk/

documentation:
 - title: Overview
   content: !include docs/overview.md
 - title: Versioning
   content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/versioning.md
 - title: Errors
   content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/errors.md
 - title: Testing
   content: !include docs/testing.md

mediaType: application/json

uses:
  sec: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/securitySchemes.raml
  headers: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/headers.raml
  annotations: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/annotations.raml
  types: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/types.raml

/misc/push-pull-notification:
  /box/{boxId}/notifications:
    uriParameters:
      boxId:
        description: Unique identifier for a box
        type: string
        required: true
        example: 50dca3fc-c37c-4f03-b719-63571333624c
    get:
      displayName: Get a list of notifications
      description: Returns a list of notifications that have been sent to a box.
        <br><br>A maximum of 100 notifications will be returned. These will be ordered oldest first.
        <br><br>The OAuth bearer token used by this endpoint must have the scope `read:pull-notifications`.
      is: [headers.acceptHeader]
#      TODO Documentation doesn't render the required scope !!!!!
      securedBy: [ sec.x-application: { scopes: [ "read:pull-notifications" ] }  ]
      (annotations.scope): "read:pull-notifications"
      queryParameters:
        status:
          type: string
          description: Only return notifications with this status.<br>Either `PENDING`, `FAILED` or `ACKNOWLEDGED`.
          required: false
          example: FAILED
        fromDate:
          type: string
          description: Only return notifications created after this datetime.<br>ISO-8601 UTC date and time.
          required: false
          example: 2020-06-03T14:20:54.987
        toDate:
          type: string
          description: Only return notifications created before this datetime.<br>ISO-8601 UTC date and time.
          required: false
          example: 2020-06-03T14:20:54.987
      responses:
        200:
          body:
            application/json:
              type: !include schemas/get_notifications.json
              example: |
                [
                  {
                      "notificationId": "1ed5f407-8096-40d1-87ef-9a2a103eeb85",
                      "boxId": "50dca3fc-c37c-4f03-b719-63571333624c",
                      "messageContentType": "application/json",
                      "message": "{\"key\":\"value\"}",
                      "status": "PENDING",
                      "createdDateTime": "2020-06-01T10:20:23.160+0000"
                  },
                  {
                      "notificationId": "86bb5f82-452e-49c8-88af-1f321d573960",
                      "boxId": "50dca3fc-c37c-4f03-b719-63571333624c",
                      "messageContentType": "application/xml",
                      "message": "<someXml>xmlValue</someXml>",
                      "status": "PENDING",
                      "createdDateTime": "2020-06-02T10:27:33.613+0000"
                  }
                ]
        400:
          body:
            application/json:
              type: types.errorResponse
              examples:
                example-1:
                  description: The box identifier is not valid
                  value:
                    code: BAD_REQUEST
                example-2:
                  description: The provided query parameters don't match the specification
                  value:
                    code: INVALID_REQUEST_PAYLOAD
        403:
          body:
            application/json:
              type: types.errorResponse
              examples:
                example-1:
                  description: You do not have access to the specified box
                  value:
                    code: FORBIDDEN
        404:
          body:
            application/json:
              type: types.errorResponse
              examples:
                example-1:
                  description: The unique identifier for the box does not exist
                  value:
                    code: BOX_NOT_FOUND
        406:
          body:
            application/json:
              type: types.errorResponse
              examples:
                example-1:
                  description: The accept header is missing or invalid
                  value:
                    code: ACCEPT_HEADER_INVALID
  /box/{boxId}/notifications/acknowledge:
    uriParameters:
      boxId:
        description: Unique identifier for a box
        type: string
        required: true
        example: 50dca3fc-c37c-4f03-b719-63571333624c
    put:
      displayName: Acknowledge a list of notifications
      description: Updates the status of one or more notifications to `ACKNOWLEDGED`.
        <br><br>A maximum of 100 notifications will be updated.
        <br><br>The OAuth bearer token used by this endpoint must have the scope `write:notifications`.
      is: [headers.acceptHeader]
       #      TODO Documentation doesn't render the required scope !!!!!
      securedBy: [ sec.x-application: { scopes: [ "write:pull-notifications" ] }  ]
      (annotations.scope): "write:notifications"
      headers:
        Content-Type:
          description: The format of the request body. This must be `application/json`.
          type: string
          required: true
          example: application/json
      body:
        application/json:
          type: !include schemas/acknowledge.json
          example: |
            {
              "notificationIds": [
                "50dca3fc-c37c-4f03-b719-63571333624c",
                "86bb5f82-452e-49c8-88af-1f321d573960"
              ]
            }
      responses:
        204:
        400:
          body:
           application/json:
             type: types.errorResponse
             examples:
               example-1:
                 description: The request body does not match the specification
                 value:
                   code: INVALID_REQUEST_PAYLOAD
        403:
         body:
           application/json:
             type: types.errorResponse
             examples:
               example-1:
                 description: You do not have access to the specified box
                 value:
                   code: FORBIDDEN
        404:
         body:
           application/json:
             type: types.errorResponse
             examples:
               example-1:
                 description: The unique identifier for the box does not exist
                 value:
                   code: BOX_NOT_FOUND
        406:
         body:
           application/json:
             type: types.errorResponse
             examples:
               example-1:
                 description: The Accept header is missing or invalid
                 value:
                   code: ACCEPT_HEADER_INVALID
        415:
          body:
           application/json:
             type: types.errorResponse
             examples:
               example-1:
                 description: The Content-Type header is incorrect
                 value:
                   code: BAD_REQUEST
