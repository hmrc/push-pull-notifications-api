#%RAML 1.0
---
title: Push Pull Notifications
version: 1.0

protocols: [ HTTPS ]
baseUri: https://api.service.hmrc.gov.uk/

documentation:
 - title: Overview
   content: !include docs/overview.md
 - title: Versioning
   content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/versioning.md
 - title: Errors
   content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/errors.md
 - title: Testing
   content: !include docs/testing.md

mediaType: application/json

uses:
  sec: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/securitySchemes.raml
  headers: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/headers.raml
  annotations: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/annotations.raml
  types: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/types.raml

/misc/push-pull-notification:
  /notifications/topics/{topicId}:
    uriParameters:
      topicId:
        description: Unique identified for the topic.
        type: string
        required: true
        example: 50dca3fc-c37c-4f03-b719-63571333624c
    get:
      displayName: Get a list of notifications
      description: Returns a list of notifications that have been sent to a topic. The OAuth bearer token used by this
        endpoint must have the scope `read:pull-notifications`.
      is: [headers.acceptHeader]
#      TODO Documentation doesn't render the required scope !!!!!
      securedBy: [ sec.x-application: { scopes: [ "read:pull-notifications" ] }  ]
      (annotations.scope): "read:pull-notifications"
      queryParameters:
        status:
          type: string
          enum: ["RECEIVED"]
          description: Only return notifications with this status. Currently `RECEIVED` is the only valid value.
          required: false
        fromDate:
          type: string
          description: Only return notifications created after this datetime. ISO-8601 UTC date and time.
          required: false
          example: 2020-06-03T14:20:54.987
        toDate:
          type: string
          description: Only return notifications created before this datetime. ISO-8601 UTC date and time.
          required: false
          example: 2020-06-03T14:20:54.987
      responses:
        200:
          body:
            application/json:
              type: !include schemas/get_notifications.json
              example: |
                [
                  {
                      "notificationId": "1ed5f407-8096-40d1-87ef-9a2a103eeb85",
                      "topicId": "50dca3fc-c37c-4f03-b719-63571333624c",
                      "notificationContentType": "application/json",
                      "message": "{\"key\":\"value\"}",
                      "status": "RECEIVED",
                      "createdDateTime": "2020-06-01T10:20:23.160+0000"
                  },
                  {
                      "notificationId": "86bb5f82-452e-49c8-88af-1f321d573960",
                      "topicId": "50dca3fc-c37c-4f03-b719-63571333624c",
                      "notificationContentType": "application/xml",
                      "message": "<someXml>xmlValue</someXml>",
                      "status": "RECEIVED",
                      "createdDateTime": "2020-06-01T10:27:33.613+0000"
                  }
                ]
        # TODO Need an JSON schema for the response
        400:
          body:
            application/json:
              type: types.errorResponse
              examples:
                example-1:
                  description: The provided query parameters don't match the specification.
                  value:
                    code: BAD_REQUEST
        404:
          body:
            application/json:
              type: types.errorResponse
              examples:
                example-1:
                  description: The unique identified for the topic does not exist.
                  value:
                    code: TOPIC_NOT_FOUND
